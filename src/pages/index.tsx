import type { NextPage } from 'next'
import Head from 'next/head'
import Image from 'next/image'
import { useSession, signIn, signOut } from 'next-auth/react'
import React, { useCallback, useEffect, useState } from 'react'
import axios from 'axios'

interface videos {}

const Home: NextPage = () => {
  const { data: session } = useSession()
  // const apikey = String(process.env.NEXT_PUBLIC_YOUTUBE_APIKEY)
  const apikey = String(process.env.NEXT_PUBLIC_YOUTUBE_APIKEY2)
  const channelID = 'UCBL4qbfyteUA-KGj3_9G1LA'
  const playListUrl = `https://www.googleapis.com/youtube/v3/playlistItems?part=snippet&playlistId=UUacLlgUxCnIUegABaDTslyg&maxResults=15&key=${apikey}`

  // useEffect(()=>{
  // fetch(
  //   "https://www.googleapis.com/youtube/v3/channels?part=" +
  //     "snippet" +
  //     "&id=" +
  //     channelID +
  //     "&key=" +
  //     apikey
  // ).then((res) => res.json())
  // .then((res) => {
  //   const res1 =res.result;
  //   console.log("res1",res1)
  // })
  // },[])
  // const [videos, setVideos] = useState()
  // const url = `https://www.googleapis.com/youtube/v3/search?type=video&part=snippet&q=apple&maxResults=3&key=${apikey}`;
  // useEffect(()=>{
  //   fetch(url)
  //     .then(res => {
  //           setVideos(res.json())
  //     })
  //     .catch(() => {
  //         console.log('通信に失敗しました');
  //     });
  //   },[])
  //   console.log("video=>",videos)

  //   fetch(url)
  //   .then(res => {
  //     console.log("res=> ",res.json)
  //   })
  // const [videos, setVideos] = useState('')
  const [videos, setVideos] = useState<string[]>([''])
  const [word, setWord] = useState<string>('')
  const [searchWord, setSearchWord] = useState<string>('にゃんこ')

  const search_api_url = 'https://www.googleapis.com/youtube/v3/search?'
  // const search_api_url = "https://www.googleapis.com/youtube/v3/channel?"
  useEffect(() => {
    const params = {
      key: apikey,
      q: searchWord, // 検索ワード
      type: 'video',
      maxResults: '5', // 取得数
      order: 'viewCount', // 再生数順
    }
    const queryParams = new URLSearchParams(params)
    fetch(search_api_url + queryParams)
      .then((res) => res.json())
      .then(
        (result) => {
          console.log('API success:', result.items)
          if (result.items && result.items.length !== 0) {
            // const firstItem = result.items[0]
            // setVideos(firstItem.id.videoId)
            // console.log('videos', videos)

            const videosId = result.items.map((v, i) => {
              return v.id.videoId
            })
            setVideos(videosId)
            console.log('videos, ', videos)
            console.log('videosId', videosId)
            // console.log('id: ', result.items[0].id)
          }
        },
        (error) => {
          console.error('err=>', error)
        }
      )
  }, [searchWord, apikey])

  const onSearch = useCallback(
    (e: React.FormEvent<HTMLFormElement>) => {
      e.preventDefault()
      setSearchWord(word)
    },
    [word]
  )
  const changeWord = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {
    setWord(e.target.value)
  }, [])

  // const youtube = axios.create({
  //   baseURL: 'https://www.googleapis.com/youtube/v3'
  // })
  // const fetchPopularData = async() => {
  //   return await youtube.get('/videos', {
  //     params: {
  //         part: 'snippet',
  //         maxResults: 40,
  //         key: apikey,
  //         regionCode: 'JP',
  //         type: 'video',
  //         chart: 'mostPopular'
  //     }
  //   })
  // }
  // console.log("fetch!: ",fetchPopularData.apply)

  // const ytid = 'Z-UJbyLqioM'; // 動画ID
  // const url23 = 'https://www.googleapis.com/youtube/v3/videos';
  //   +'?part=statistics'
  //   + '&id=' + ytid
  //   + '&key=' + apikey
  // fetch(url23).then((res) => res.json())
  // .then((res) => {
  //   console.log("res,,: ",res)
  // })

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>

      <header>
        <div className='translate-y-[-5px] slide-left'>
          {session ? (
            <button className='danger-btn' onClick={() => signOut()}>
              LogOut
            </button>
          ) : (
            <button className='primary-btn' onClick={() => signIn()}>
              LogIn
            </button>
          )}
        </div>
      </header>

      <main>
        <div>
          <h1 className='text-red-500 text-[10px]'>
            Welcome to <a href='https://nextjs.org'>Next.js!</a>
          </h1>
          <form onSubmit={(e) => onSearch(e)}>
            <input
              type='text'
              value={word}
              onChange={changeWord}
              className='border border-black'
            />
            <input
              type='submit'
              value='検索'
              className='ml-2 border border-black'
            />
          </form>
          <div onClick={() => setSearchWord('わんこ')}>わんこ</div>
          <div onClick={() => setSearchWord('又三郎')}>又三郎</div>
          {videos &&
            videos.map((v, i) => (
              <div key={i}>
                <iframe
                  id='player'
                  width='640'
                  height='360'
                  src={'https://www.youtube.com/embed/' + v}
                  frameBorder='0'
                  allowFullScreen
                />
              </div>
            ))}
          {/* <iframe
            id='player'
            width='640'
            height='360'
            src={'https://www.youtube.com/embed/' + videos}
            // src={'https://www.youtube.com/embed/' + 'oEbtRMeZR24'}
            frameBorder='0'
            allowFullScreen
          /> */}
        </div>
      </main>
      <footer></footer>
    </div>
  )
}

export default Home
